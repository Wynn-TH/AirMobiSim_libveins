
#
# Copyright (C) 2017 Rudolf Hornig <rudi@omnetpp.org>
# Copyright (C) 2018-2020 Christoph Sommer <sommer@cms-labs.org>
# Copyright (C) 2022-2025 Tobias Hardes <info@thardes.net>
#
# Documentation for these modules is at http://veins.car2x.org/
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
.PHONY: all

all:

$(DEFFILE): $(OBJS)  $(wildcard $(EXTRA_OBJS)) Makefile $(CONFIGFILE)
	$(Q)$(DLLTOOL) --export-all-symbols --kill-at --output-def $O/all.def $(OBJS) $(EXTRA_OBJS)
	$(Q)grep -E '( *_ZTI)|( *_ZThn)|( *_ZTv0)|EXPORTS' $O/all.def | sed 's/ @.*//' >$(DEFFILE)

$O/$(TARGET): $(DEFFILE)


VEINS_NEED_MSG6 := $(shell echo ${OMNETPP_VERSION} | grep "^5" >/dev/null 2>&1; echo $$?)
ifeq ($(VEINS_NEED_MSG6),0)
  MSGCOPTS += --msg6
endif


ifeq ($(WITH_OSG), yes)
  OMNETPP_LIBS += $(OSG_LIBS)
endif

#
# Get Compiler- and Linker-Flags from conan_flags.mk
#
include ../build/conan_flags.mk

ABSL_BASE_PATH := $(shell find ~/.conan2/p -path "*/include/absl" | head -n 1 | xargs dirname)
GRPC_BASE_PATH := $(shell find ~/.conan2/p -path "*/include/grpcpp" | head -n 1 | xargs dirname)
PROTO_BASE_PATH := $(shell find ~/.conan2/p -path "*/include/google" | head -n 1 | xargs dirname)
CXXFLAGS += -I$(GRPC_BASE_PATH)
CXXFLAGS += -I$(ABSL_BASE_PATH)
CXXFLAGS += -I$(PROTO_BASE_PATH)




#############################################################################################################

# Extract CONAN_LIBRARY_DIRS and remove incorrect entries
CONAN_LIB_DIRS := $(shell grep "CONAN_RUNTIME_LIB_DIRS" ../build/Release/generators/conan_toolchain.cmake | \
    sed -E 's/set\(CONAN_RUNTIME_LIB_DIRS (.+)\)/\1/' | tr -d '"' | tr ' ' '\n' | grep -vE '(^lib$$|^$$)')

# If the list is empty, set a dummy value to avoid errors
CONAN_LIB_DIRS := $(if $(CONAN_LIB_DIRS),$(CONAN_LIB_DIRS),/dev/null)

# Create -L flags for the linker
OMNETPP_LIB_PATHS := $(addprefix -L, $(CONAN_LIB_DIRS))

# Find all .so libraries in the Conan directories
OMNETPP_LIBS := $(foreach dir, $(CONAN_LIB_DIRS), $(wildcard $(dir)/*.so))

#  Convert the libraries found to -l flags
OMNETPP_LIBS_FLAGS := $(patsubst lib%.so,-l%, $(notdir $(OMNETPP_LIBS)))

# Debug prints
#$(info CONAN_LIB_DIRS: $(CONAN_LIB_DIRS))
#$(info OMNETPP_LIB_PATHS: $(OMNETPP_LIB_PATHS))
#$(info OMNETPP_LIBS: $(OMNETPP_LIBS))
#$(info OMNETPP_LIBS_FLAGS: $(OMNETPP_LIBS_FLAGS))



#
# macOS-specific changes
#
ifeq ($(shell uname), Darwin)
  ifneq ($(CONAN_FRAMEWORKS),)
    OMNETPP_LIBS += $(addprefix -framework , $(CONAN_FRAMEWORKS))
  endif
endif


#
# Protobuf
#
PROTO_IN_PATH=..
PROTO_OUT_PATH=veins_libairmobisim/proto

# Get link to GRPC and PROTOC binary
GRPC_CPP_PLUGIN := $(shell find ~/.conan2/p -path "*/bin/grpc_cpp_plugin" | head -n 1)
PROTOC_PLUGIN := $(shell find ~/.conan2/p -path "*/bin/protoc" | head -n 1)

# Debug prints
#$(info GRPC PLUGIN: $(GRPC_CPP_PLUGIN))
#$(info PROTOC: $(PROTOC_PLUGIN))


all:

veins_libairmobisim/mobility/DroCIManager.cc: veins_libairmobisim/mobility/DroCIManager.h

veins_libairmobisim/mobility/DroCIManager.h: veins_libairmobisim/proto/airmobisim.grpc.pb.h

veins_libairmobisim/proto/airmobisim.grpc.pb.h: ../airmobisim.proto
	$(PROTOC_PLUGIN) --proto_path $(PROTO_IN_PATH) --cpp_out $(PROTO_OUT_PATH) "$<"
	$(PROTOC_PLUGIN) --proto_path $(PROTO_IN_PATH) --grpc_out=$(PROTO_OUT_PATH) --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN) "$<"




